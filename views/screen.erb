<canvas id="canvas" width="1200px" height="800px">
    Canvasに対応したブラウザを使ってください。
</canvas>
  <script>
	var DspFont = ['ヒラギノ角ゴ Pro W6','Meiryo UI','Impact', 'Gungsuh','Arial','Tahoma', 'sans-serif', 'ＭＳ Ｐ明朝', 'fantas', 'ＭＳ ゴシック', 'HG正楷書体-PRO'];

  (function() {
    'use strict';
	var canvas = document.getElementById("canvas");

	if(!canvas || !canvas.getContext) return false;
	var ctx = canvas.getContext("2d"); 

	var Comment;
	var comments = [];

	function rand(min, max) {
	// 0-n
	// Math.floor(Math.random() * (n + 1))
	return min + Math.floor(Math.random() * (max - min + 1))
	
	}


	Comment = function(id, x, y, fnt, rgb, txt) {
		this.id = id;
		this.x = x;
		this.y = y;
		this.fnt  = fnt;
		this.rgb  = rgb;
		this.txt = txt;

		//velocity x,y 
		this.vx = rand(3, 8);
//		this.vy = rand(1, 3);

		this.draw = function() {
				ctx.font = ''  + this.fnt.size + 'px \'' +  this.fnt.font + '\'';
				ctx.fillStyle = 'rgb(' + this.rgb.red + ', ' + this.rgb.green + ', ' + this.rgb.blue + ')';
				ctx.fillText(txt, canvas.width , y);
		};
		
		this.move = function() {
			this.x += this.vx;
		//	this.y += this.vy;
			ctx.fillText(txt, canvas.width -this.x, y);
			
		}
	};
	
//	<% @comments.each do |comment| %>
//		var rgb = {
//			red: 	rand(0, 255),
//			green: 	rand(0, 255),
//			blue:  	rand(0, 255)
//		};
//	
//		var fnt = {
//			font:	DspFont[rand(0,DspFont.length-1)],
//			size:	rand(20, 100)
//		};
//		comments.push(new Comment(rand(0,canvas.width) -canvas.width, rand(fnt.size,canvas.height -fnt.size), fnt, rgb, "<%= comment.body %>"));
//	
//		$.post('/updateflg', {
//		id: <%= comment.id %>
//		}, console.log("delete sucsess"));
//	<% end %>

	function update() {  
		ctx.clearRect( 0, 0, canvas.width, canvas.height);
		var i;
		for (i = 0; i < comments.length; i++) {

			if (comments[i]) {
				comments[i].draw();
				comments[i].move();

				if (comments[i].x > (canvas.width + (comments[i].fnt.size * comments[i].txt.length))) {
					$.post('/updateflg', {
					id: comments[i].id
					}, console.log("delete sucsess" + comments[i].id + ":" + comments[i].txt));
					delete comments[i];
				}
			}
		}
		setTimeout(function() {
			update();
		}, 20);
	}
	update();

	
	function reload() {	
		$.ajax({
			type: "GET",
			url:  "/comments",
			dataType: "json",
			success: function(data){
				var dataArray = data.comments;
				$.each(dataArray, function(i) {
					console.log(dataArray[i].id + ":" + dataArray[i].comment_body)


						var rgb = {
							red: 	rand(0, 255),
							green: 	rand(0, 255),
							blue:  	rand(0, 255)
						};
					
						var fnt = {
							font:	DspFont[rand(0,DspFont.length-1)],
							size:	rand(40, 100)
						};
				
					comments.push(new Comment(dataArray[i].id, rand(0,canvas.width) -canvas.width, rand(fnt.size,canvas.height -fnt.size), fnt, rgb, dataArray[i].comment_body));

				});
			}
		});
		
		setTimeout(function() {
			reload();
		}, 6000);
	}
	reload();

  })();
  </script>